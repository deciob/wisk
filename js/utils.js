// Generated by CoffeeScript 1.3.3

define([], function() {
  'use strict';

  var Utils,
    _this = this;
  return Utils = {
    extend: function(o, p) {
      var prop, _i, _len;
      for (_i = 0, _len = p.length; _i < _len; _i++) {
        prop = p[_i];
        o[prop] = p[prop];
      }
      return o;
    },
    setBoxWidth: function() {
      var boxes, inbox_width, inside_width, out_box_width;
      boxes = this.c.dataset.data.length;
      inside_width = this.c.width - this.c.out_margin.left - this.c.out_margin.right;
      out_box_width = Math.floor(inside_width / boxes) - this.c.stroke_width * 2 - 1;
      inbox_width = out_box_width - this.c.in_margin.left - this.c.in_margin.right;
      if (inbox_width < 0) {
        inbox_width = 1;
      }
      return this.box_width = {
        out: out_box_width,
        "in": inbox_width
      };
    },
    setScales: function(dataset) {
      var margin_bottom, margin_top, self;
      self = this;
      margin_bottom = self.c.out_margin.bottom + self.c.in_margin.bottom;
      margin_top = self.c.out_margin.top + self.c.in_margin.top;
      this.y1 = d3.scale.linear().domain([dataset.min, dataset.max]).rangeRound([self.c.height - margin_bottom - margin_top, 0]);
      this.y0 = self.__chart__ || d3.scale.linear().domain([0, Infinity]).rangeRound(self.y1.range());
      return this.__chart__ = this.y1;
    },
    yAxisGenerator: function() {
      var sub_ticks;
      sub_ticks = this.c.sub_ticks ? 1 : 0;
      return d3.svg.axis().scale(this.y1).orient("left").tickSubdivide(sub_ticks).tickSize(6, 3, 0);
    },
    getVerticalDelta: function() {
      return this.c.out_margin.top + this.c.in_margin.top;
    },
    setXAxis: function(self) {},
    getXMidBoxPos: function(i) {
      var w;
      w = this.box_width.out;
      return Math.floor(this.c.out_margin.left + (w * (i + 1)) - (w / 2));
    },
    getXLeftBoxPos: function(i) {
      var w;
      w = this.box_width.out;
      return Math.floor(this.c.out_margin.left + (w * i) + this.c.in_margin.left);
    },
    getTopBoxPos: function() {},
    boxQuartiles: function(d) {
      return [d3.quantile(d, .25), d3.quantile(d, .5), d3.quantile(d, .75)];
    }
  };
});
